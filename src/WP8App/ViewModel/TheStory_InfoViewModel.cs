// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   ViewModel.tt
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls=WPAppStudio.Controls;
using Entities=WPAppStudio.Entities;
using EntitiesBase=WPAppStudio.Entities.Base;
using IServices=WPAppStudio.Services.Interfaces;
using IViewModels=WPAppStudio.ViewModel.Interfaces;
using Localization=WPAppStudio.Localization;
using Repositories=WPAppStudio.Repositories;
using Services=WPAppStudio.Services;
using ViewModelsBase=WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of TheStory_Info ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class TheStory_InfoViewModel : ViewModelsBase.VMBase, IViewModels.ITheStory_InfoViewModel
    {       

		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly IServices.ISpeechService _speechService;
		private readonly IServices.IShareService _shareService;
		private readonly IServices.ILiveTileService _liveTileService;
		private readonly Repositories.ITheStory_TheStoryDataSource _theStory_TheStoryDataSource;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="TheStory_InfoViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="speechService">The Speech Service.</param>
        /// <param name="shareService">The Share Service.</param>
        /// <param name="liveTileService">The Live Tile Service.</param>
        /// <param name="theStory_TheStoryDataSource">The The Story_ The Story Data Source.</param>
        public TheStory_InfoViewModel(IServices.IDialogService dialogService, IServices.INavigationService navigationService, IServices.ISpeechService speechService, IServices.IShareService shareService, IServices.ILiveTileService liveTileService, Repositories.ITheStory_TheStoryDataSource theStory_TheStoryDataSource)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_speechService = speechService;
			_shareService = shareService;
			_liveTileService = liveTileService;
			_theStory_TheStoryDataSource = theStory_TheStoryDataSource;
        }
		
	
		private string _currentTheStory_InfoHtmlControl;

        /// <summary>
        /// CurrentTheStory_InfoHtmlControl property.
        /// </summary>		
        public string CurrentTheStory_InfoHtmlControl
        {
            get
            {
				
                if(_currentTheStory_InfoHtmlControl == null)
					_currentTheStory_InfoHtmlControl = _theStory_TheStoryDataSource.Get();
				return _currentTheStory_InfoHtmlControl;     
            }
            set
            {
                SetProperty(ref _currentTheStory_InfoHtmlControl, value);
            }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechTheStory_InfoHtmlControlCommand command.
        /// </summary>
        public  void TextToSpeechTheStory_InfoHtmlControlCommandDelegate() 
        {
				_speechService.TextToSpeech(CurrentTheStory_InfoHtmlControl);
        }
		

        private ICommand _textToSpeechTheStory_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the TextToSpeechTheStory_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand TextToSpeechTheStory_InfoHtmlControlCommand
        {
            get { return _textToSpeechTheStory_InfoHtmlControlCommand = _textToSpeechTheStory_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(TextToSpeechTheStory_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the ShareTheStory_InfoHtmlControlCommand command.
        /// </summary>
        public  void ShareTheStory_InfoHtmlControlCommandDelegate() 
        {
				_shareService.Share(@"the story", CurrentTheStory_InfoHtmlControl);
        }
		

        private ICommand _shareTheStory_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the ShareTheStory_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand ShareTheStory_InfoHtmlControlCommand
        {
            get { return _shareTheStory_InfoHtmlControlCommand = _shareTheStory_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(ShareTheStory_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartTheStory_InfoHtmlControlCommand command.
        /// </summary>
        public  void PinToStartTheStory_InfoHtmlControlCommandDelegate() 
        {
				_liveTileService.PinToStart(typeof(IViewModels.ITheStory_InfoViewModel), CreateTileInfoTheStory_InfoHtmlControl());
        }
		

        private ICommand _pinToStartTheStory_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the PinToStartTheStory_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand PinToStartTheStory_InfoHtmlControlCommand
        {
            get { return _pinToStartTheStory_InfoHtmlControlCommand = _pinToStartTheStory_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(PinToStartTheStory_InfoHtmlControlCommandDelegate); }
        }
        /// <summary>
        /// Initializes a <see cref="Services.TileInfo" /> object for the TheStory_InfoHtmlControl control.
        /// </summary>
		/// <returns>A <see cref="Services.TileInfo" /> object.</returns>
        public Services.TileInfo CreateTileInfoTheStory_InfoHtmlControl()
        {
            var tileInfo = new Services.TileInfo
            {
                CurrentId = @"the story",
                Title = @"the story",
                BackTitle = @"the story",
                BackContent = CurrentTheStory_InfoHtmlControl,
                Count = 0,
                BackgroundImagePath = string.Empty,
                BackBackgroundImagePath = string.Empty,
                LogoPath = "Logo-2304ce0a-3c98-453b-bb1b-5a0077d14161.png"
            };
            return tileInfo;
        }
    }
}
